{
  "swagger": "2.0",
  "info": {
    "description": "Protype API for management of venues and images",
    "version": "1.0.0",
    "title": "Venue API",
    "contact": {
    },
    "license": {
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "venue-controller-impl",
      "description": "API to manage venues"
    }
  ],
  "paths": {
    "/venues": {
      "get": {
        "tags": [
          "venue-controller-impl"
        ],
        "summary": "getVenues",
        "description": "Return a set of venues from the system regarding to 'limit' and 'offset' parameters. If nothing found return an empty set.",
        "operationId": "getVenuesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return. Default is 20. Limit should be less then 1000.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "This parameter specify where to start returning venues from the entire set of result. Default is 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Venue"
              }
            }
          },
          "400": {
            "description": "Bad request. If request not parsable, or contains not valid parameters. Also all related to business logic errors."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error. Connection to data storage failed, etc. No errors related to business logic."
          }
        }
      },
      "post": {
        "tags": [
          "venue-controller-impl"
        ],
        "summary": "createVenue",
        "description": "Creates a new venue. Duplicates are allowed.",
        "operationId": "createVenueUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "venue",
            "description": "Venue to add to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewVenue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Venue"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request. If request not parsable, or contains not valid parameters. Also all related to business logic errors."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error. Connection to data storage failed, etc. No errors related to business logic."
          }
        }
      }
    },
    "/venues/{id}": {
      "get": {
        "tags": [
          "venue-controller-impl"
        ],
        "summary": "getVenue",
        "description": "Return a venue based on a single id.",
        "operationId": "getVenueUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of venue to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Venue"
              }
            }
          },
          "400": {
            "description": "Bad request. If request not parsable, or contains not valid parameters. Also all related to business logic errors."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "venue not found. If id invalid return '400' error code."
          },
          "500": {
            "description": "Internal server error. Connection to data storage failed, etc. No errors related to business logic."
          }
        }
      },
      "put": {
        "tags": [
          "venue-controller-impl"
        ],
        "summary": "updateVenue",
        "description": "Update venue",
        "operationId": "updateVenueUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "venue",
            "description": "venue that will be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Venue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Venue"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request. If request not parsable, or contains not valid parameters. Also all related to business logic errors."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "venue not found. If id invalid return '400' error code."
          },
          "500": {
            "description": "Internal server error. Connection to data storage failed, etc. No errors related to business logic."
          }
        }
      },
      "delete": {
        "tags": [
          "venue-controller-impl"
        ],
        "summary": "deleteVenue",
        "description": "delete a single venue based on the id supplied",
        "operationId": "deleteVenueUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of venue to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Venue"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad request. If request not parsable, or contains not valid parameters. Also all related to business logic errors."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "venue not found. If id invalid return '400' error code."
          },
          "500": {
            "description": "Internal server error. Connection to data storage failed, etc. No errors related to business logic."
          }
        }
      }
    }
  },
  "definitions": {
    "NewVenue": {
      "required": [
        "city",
        "country",
        "homepageUrl",
        "name",
        "parseUrl",
        "phoneNumber",
        "postalCode",
        "street"
      ],
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "homepageUrl": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "menuUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "parseUrl": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "street": {
          "type": "string"
        }
      }
    },
    "Venue": {
      "required": [
        "city",
        "country",
        "homepageUrl",
        "id",
        "name",
        "parseUrl",
        "phoneNumber",
        "postalCode",
        "street"
      ],
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "homepageUrl": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "menuUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "parseUrl": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "street": {
          "type": "string"
        }
      }
    }
  }
}